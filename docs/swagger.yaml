basePath: /
definitions:
  controllers.songRequest:
    properties:
      group:
        description: Пример значения
        example: Muse
        type: string
      song:
        example: Supermassive Black Hole
        type: string
    type: object
  models.Song:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      group_id:
        type: integer
      group_name:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
  models.SongDetail:
    properties:
      group_name:
        type: string
      link:
        type: string
      release_date:
        type: string
      song_name:
        type: string
      text:
        type: string
    type: object
  models.SongUpdate:
    properties:
      group_name:
        type: string
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: API for managing song information
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Music library API
  version: "1.0"
paths:
  /info:
    post:
      consumes:
      - application/json
      description: Retrieve song information by group and title
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.songRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Title details successfully retrieved
          schema:
            $ref: '#/definitions/models.SongDetail'
        "400":
          description: Bad request - missing or invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Title not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error - database or API error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get song information
      tags:
      - Songs
  /songs:
    get:
      consumes:
      - application/json
      description: Retrieve a list of songs with optional filtering and pagination
      parameters:
      - description: Filter by Group Name
        in: query
        name: group
        type: string
      - description: Filter by Title
        in: query
        name: song
        type: string
      - description: 'Filter by Release Date (format: DD.MM.YYYY)'
        in: query
        name: releaseDate
        type: string
      - description: Filter by Text
        in: query
        name: text
        type: string
      - description: Filter by Link
        in: query
        name: link
        type: string
      - default: 1
        description: Page number for pagination
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Songs retrieved successfully
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Bad request - invalid parameters
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: No songs found matching criteria
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error - database error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List songs with optional filtering
      tags:
      - Songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a song by its ID
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Title deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid song ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Title not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a song
      tags:
      - Songs
    patch:
      consumes:
      - application/json
      description: Update song information by ID (supports partial updates)
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: integer
      - description: Title Update Information (supports partial updates)
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.SongUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Title updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid song data or ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Title not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error - database error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing song
      tags:
      - Songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Retrieve song text for a specific song ID with pagination support
      parameters:
      - description: Title ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Page number for text pagination
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of text lines per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Title text retrieved successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request - invalid ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Title or page not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error - database error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get song text by ID with pagination
      tags:
      - Songs
swagger: "2.0"
